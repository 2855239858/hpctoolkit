Notes on running HPCToolkit on KNL, power8/le and ARM.

Beginning with the merge of newarch and master, hpctoolkit has
preliminary support for three new platforms: KNL, power8/le and ARM.
Old platforms: x86-64, powerpc, Blue Gene/Q and Cray XT/XK should
build and run as usual without any noticeable difference.

There are two main steps with the merge.

1. Autotools -- the new platforms require a newer version of
autotools.  Unless you're a developer (see below) and modifying the
Makefiles, this should work transparently without any manual effort.
But there are several moving parts, and it's possible that some corner
cases might be broken.

2. Dyninst -- at the time of the merge (Oct 6, 2016), a released
version of Dyninst that supports the new platforms is not yet
finished.  Until that happens, the merge is not finished and the new
platforms are not yet supported.

------------------------------------------------------------

Building externals with an alternate Dyninst.

Until the next Dyninst release is finished, the version in externals
(9.1.0 + AVX patches) may not be suitable for new platforms,
especially power8/le and ARM.  As a temporary measure, you can try
building externals and hpctoolkit with an alternate version of Dyninst
by the following steps.

1. Clone dyninst from github.

git clone https://github.com/dyninst/dyninst

2. Checkout a version of dyninst, this choice is platform dependent.

cd dyninst
git checkout ...

3. Configure externals with this option to specify the path to the
dyninst source tree.

configure --with-dyninst-src=/path/to/dyninst/src/tree

4. Continue building externals and hpctoolkit as usual.

Not every version of Dyninst will build or run correctly, and you may
need to adjust the patches in externals/symtabAPI/patches.

------------------------------------------------------------

Notes for specific platforms.

KNL -- The key issue for KNL is for ParseAPI and InstructionAPI to
understand the new AVX instructions.  If ParseAPI does not understand
some instructions, then it will produce a poor control flow graph and
will miss large sections of some functions, resulting in poor results
in the viewer.  This is mostly an issue with the Intel compiler.

The version of Dyninst in externals (9.1.0 + AVX patches) understands
most AVX instructions, but there may be some gaps.  This is not yet
fully tested.

Power8/little-endian -- This version of Dyninst causes hpcstruct to go
into an infinite loop.  I'm working on finding a better rev.

ARM -- This version of Dyninst causes hpcstruct to throw an assert.
Again, I'm working on finding a better rev.

Also, we currently don't have a native unwinder for ARM and so we use
libunwind.  Applications that perform a high number of calls to short
functions from shared libraries may see a high number (5-10%) of
partial unwinds.  Libunwind does not do well on interrupts taken
inside the PLT, so for every call to a function inside a shared
library, there is a small window of vulnerability where the unwind
will fail.

------------------------------------------------------------

Notes for developers.

1. After the merge, hpctoolkit and externals use a newer version of
autotools: autoconf 2.69, automake 1.15 and libtool 2.4.6.

Hpctoolkit-devtools is updated with the current version needed after
the merge.  This is only needed if you're modifying the build files
(configure.ac and Makefile.am) and rerunning autoreconf.

git clone https://github.com/hpctoolkit/hpctoolkit-devtools
cd hpctoolkit-devtools
./make.sh /path/to/install/prefix

add install prefix to PATH

2. If you're working on a branch that is not yet merged from the new
master, then you will need an older version of both externals and
devtools.  There are tags 'oldarch' and 'pre-newarch' (same revs) for
the old versions.

git checkout oldarch

------------------------------------------------------------

Leftover to-do list and known issues.

(5) Libunwind and xerces don't build .so shared libraries.  Either
update to later versions, or commit to static only, or both.
---> they work with static versions, will revisit later

(6) Integrate binutils with libz.

(7) Separate libiberty from binutils for symtab only and remove -fPIC
from rest of binutils.

(8) Replace libelf with elfutils.

